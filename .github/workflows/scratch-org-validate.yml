name: Validate in Scratch Org

on:
    pull_request:
      types: [opened, synchronize, reopened]
    repository_dispatch:
      types: [validate-pr]

jobs:
    validate:
      runs-on: ubuntu-latest
      env:
          DEVHUB_AUTH_URL: ${{ secrets.DEVHUB_AUTH_URL }}

      steps:
        - uses: actions/checkout@v3
          with:
            ref: ${{ github.event.pull_request.head.ref || github.ref }}

        - name: Install Salesforce CLI
          run: |
            npm install -g @salesforce/cli
            sf version

        - name: Create project-scratch-def.json if missing
          run: |
            if [ ! -f config/project-scratch-def.json ]; then
              mkdir -p config
              cat > config/project-scratch-def.json << 'EOF'
            {
              "orgName": "AI Generated Scratch Org",
              "edition": "Developer",
              "features": ["EnableSetPasswordInApi"],
              "settings": {
                "lightningExperienceSettings": {
                  "enableS1DesktopEnabled": true
                }
              }
            }
            EOF
            fi

        - name: Create sfdx-project.json if missing
          run: |
            if [ ! -f sfdx-project.json ]; then
              cat > sfdx-project.json << 'EOF'
            {
              "packageDirectories": [
                {
                  "path": "force-app",
                  "default": true
                }
              ],
              "sfdcLoginUrl": "https://login.salesforce.com",
              "sourceApiVersion": "59.0"
            }
            EOF
            fi

        - name: Authenticate Dev Hub (if secret exists)
          if: env.DEVHUB_AUTH_URL != ''
          run: |
              echo "${{ env.DEVHUB_AUTH_URL }}" > auth.txt
              sf org login sfdx-url -f auth.txt -a devhub -d
              rm auth.txt

        - name: Create Scratch Org (if authenticated)
          id: create-org
          if: env.DEVHUB_AUTH_URL != ''
          continue-on-error: true
          run: |
              sf org create scratch -f config/project-scratch-def.json -a scratch-org -d -y 1 -w 10
              echo "org_created=true" >> $GITHUB_OUTPUT

        - name: Deploy to Scratch Org
          if: steps.create-org.outputs.org_created == 'true'
          id: deploy
          continue-on-error: true
          run: |
            sf project deploy start -o scratch-org -w 20

        - name: Run Tests
          if: steps.deploy.outcome == 'success'
          continue-on-error: true
          run: |
            sf apex test run -o scratch-org -w 10 -r human

        - name: Delete Scratch Org
          if: steps.create-org.outputs.org_created == 'true'
          run: |
            sf org delete scratch -o scratch-org -p || true

        - name: Comment on PR
          if: always()
          uses: actions/github-script@v6
          with:
            script: |
              const outcome = '${{ steps.deploy.outcome }}';
              const body = outcome === 'success' 
                ? '✅ Scratch org validation passed!'
                : '⚠️ Scratch org validation skipped (no DevHub auth configured)';

              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.name,
                body: body
              });
